<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- 加载数据库配置文件 -->
	<context:property-placeholder location="classpath:jdbc.properties" />

	<!-- 配置数据源,druid管理 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.userName}" />
		<property name="password" value="${jdbc.passWord}" />
		<property name="filters" value="stat" />
		<!-- 连接池的最大数据库连接数。设为0表示无限制。一般把maxActive设置成可能的并发量就行了 -->
		<property name="maxActive" value="1000" />
		<!-- 初始化大小 -->
		<property name="initialSize" value="10" />
		<!-- 最大等待毫秒数, 单位为 ms, 如果超过此时间将接到异常,设为-1表示无限制 -->
		<property name="maxWait" value="60000" />
		<!-- 最小等待(空闲)连接中的数量 -->
		<property name="minIdle" value="10" />
		<!-- 在空闲连接回收器线程运行期间休眠的时间值,以毫秒为单位. 如果设置为非正数,则不运行空闲连接回收器线程 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 连接池中保持空闲而不被空闲连接回收器线程 ，回收的最小时间值，单位毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<!-- SQL查询,用来验证从连接池取出的连接,在将连接返回给调用者之前.如果指定, 则查询必须是一个SQL SELECT并且必须返回至少一行记录 -->
		<property name="validationQuery" value="SELECT 1 FROM DUAL" />
		<!-- 指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败, 则连接将被从池中去除. -->
		<!-- 注意: 设置为true后如果要生效,validationQuery参数必须设置为非空字符串 -->
		<property name="testWhileIdle" value="true" />
		<!-- 指明是否在从池中取出连接前进行检验,如果检验失败 则从池中去除连接并尝试取出另一个. 注意: -->
		<!-- 设置为true后如果要生效,validationQuery参数必须设置为非空字符串 -->
		<property name="testOnBorrow" value="false" />
		<!-- 指明是否在归还到池中前进行检验 -->
		<property name="testOnReturn" value="false" />
		<!-- 开启池的prepared statement 池功能 -->
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="50" />
	</bean>

	<!-- 配置 JdbcTemplate -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 扫描Mapper接口 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.watero.mapper" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<!-- mybatis和spring完美整合，不需要mybatis的配置映射文件 -->
	<!-- 配置工厂对象 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath*:mybatis/mapper/*.xml"></property>
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml"></property>
		<!-- 这个配置和 configLocation是冲突的二者留一个 -->
<!-- 		<property name="configuration"> -->
<!-- 			<bean class="org.apache.ibatis.session.Configuration"> -->
<!-- 				开启驼峰命名转换:Table{create_time} -> Entity{createTime} -->
<!-- 				<property name="mapUnderscoreToCamelCase" value="true" /> -->
<!-- 				使用jdbc的getGeneratedKeys获取数据库自增主键值 -->
<!-- 				<property name="useGeneratedKeys" value="true" /> -->
<!-- 				使用列别名替换列名 默认:true -->
<!-- 				<property name="useColumnLabel" value="true" /> -->
<!-- 			</bean> -->
<!-- 		</property> -->
	</bean>

	<!-- 扫描除了controller以外的组件 -->
	<context:component-scan base-package="com.watero">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

<!-- 	<context:annotation-config></context:annotation-config> -->


</beans>
